"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["890"],{33505:function(e,n,r){r.r(n),r.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>o,assets:()=>d,toc:()=>l,contentTitle:()=>a});var o=JSON.parse('{"id":"design-system","title":"Design System","description":"Let\'s look at how you can customize and brand your UI with Dyte\'s UI Kit.","source":"@site/docs/ios/design-system.mdx","sourceDirName":".","slug":"/design-system","permalink":"/ios/design-system","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Design System"},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/ios/quickstart"},"next":{"title":"Events","permalink":"/ios/events"}}'),i=r("85893"),t=r("50065");let s={sidebar_position:3,title:"Design System"},a=void 0,d={},l=[];function c(e){let n={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Head:r}=n;return!r&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Let's look at how you can customize and brand your UI with Dyte's UI Kit."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"DesignLibrary"})," is a singleton class that relies on the ",(0,i.jsx)(n.code,{children:"DesignLibraryConfiguratorProtocol"})," to initialize components with specific parameters, like border size, radius, and background color for individual and composite elements."]}),"\n",(0,i.jsxs)(n.p,{children:["For customization, you can set any object that conforms to the ",(0,i.jsx)(n.code,{children:"DesignLibraryConfiguratorProtocol"})," to modify the ",(0,i.jsx)(n.code,{children:"DesignLibrary"})," according to your needs."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:'// create an type which confirms to  DesignLibraryConfiguratorProtocol\nclass DesignLibraryConfigurator: DesignLibraryConfiguratorProtocol {\n\n    public let colorBackgroundBase: UIColor = UIColor(hex: "#050505")!\n    public let colorBrandBase: UIColor = UIColor(hex: "#0246FD")!\n\n    public let textColorBackgroundBase: UIColor = UIColor(hex: "#FFFFFF")!\n    public let textColorBrandBase: UIColor = UIColor(hex: "#111111")!\n\n    public let statusDangerColor: UIColor = UIColor(hex: "#FF2D2D")!\n    public let statusSuccessColor: UIColor = UIColor(hex: "#83D017")!\n    public let statusWarningColor: UIColor = UIColor(hex: "#FFCD07")!\n\n    public let cornerRadiusRoundFactor: CGFloat = 4.0\n    public let cornerRadiusExtraRoundFactor: CGFloat = 8.0\n    public let cornerRadiusCircularFactor: CGFloat = 8.0\n\n    public let borderSizeThinFactor: CGFloat =  1.0\n    public let borderSizeFatFactor: CGFloat = 2.0\n\n}\n\n//You can initialise DesignLibrary with below command\nDesignLibrary.shared.setConfigurator(configurator: DesignLibraryConfigurator())\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"DesignLibrary comes with default values for all the mentioned components, and the SDK internally handles their initialization."}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AppTheme"})," is a singleton class that relies on the ",(0,i.jsx)(n.code,{children:"AppThemeProtocol"})," to set corner radius and border size for various components used within ",(0,i.jsx)(n.code,{children:"DyteUiKit"}),". You can customize the ",(0,i.jsx)(n.code,{children:"AppTheme"})," by setting any object that confirms to the ",(0,i.jsx)(n.code,{children:"AppThemeProtocol"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"class AppThemeConfigurator: AppThemeProtocol {\n    private let cornerRadiusType: CornerRadius.RadiusType? = .rounded\n    private let borderSizeWidthType: BorderSize.Width? = .thin\n\n    var cornerRadiusTypeButton: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypePaginationView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypePeerView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeDropDown: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeNameTag: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeNameTextField: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeCreateView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var borderSizeWidthTypeTextField: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n\n    var borderSizeWidthTypeButton: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n\n    var borderSizeWidthTypeDropDown: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n}\n\n//You can initialise AppTheme with below command\n  AppTheme.shared.setUp(theme: AppThemeConfigurator())\n\n"})}),"\n",(0,i.jsx)(r,{children:(0,i.jsx)("title",{children:"iOS Design System"})})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);
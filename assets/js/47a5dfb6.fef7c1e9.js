"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["7895"],{83306:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>o,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>a});var i=JSON.parse('{"id":"chat/pre-built-chat-screen","title":"Pre-built Chat Screen","description":"Learn how to use and customize the DyteChatViewController component in Dyte\'s iOS UiKit with our detailed documentation.","source":"@site/docs/ios/chat/pre-built-chat-screen.mdx","sourceDirName":"chat","slug":"/chat/pre-built-chat-screen","permalink":"/ios/chat/pre-built-chat-screen","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"image":"/static/ui-kit/1.x.x/components/dyte-chat.svg","sidebar_position":1,"description":"Learn how to use and customize the DyteChatViewController component in Dyte\'s iOS UiKit with our detailed documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Pre-built Settings screen","permalink":"/ios/Pre-Built-Settings_Guides/Settings"},"next":{"title":"Chat Components","permalink":"/ios/chat/components-in-chat"}}'),s=n("85893"),r=n("50065");let o={image:"/static/ui-kit/1.x.x/components/dyte-chat.svg",sidebar_position:1,description:"Learn how to use and customize the DyteChatViewController component in Dyte's iOS UiKit with our detailed documentation."},a="Pre-built Chat Screen",l={},c=[{value:"Introduction to Chat in Dyte Meetings",id:"introduction-to-chat-in-dyte-meetings",level:2},{value:"Dyte&#39;s Prebuilt Chat Screen",id:"dytes-prebuilt-chat-screen",level:2},{value:"Topics:",id:"topics",level:3},{value:"Parameters:",id:"parameters",level:4}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"pre-built-chat-screen",children:"Pre-built Chat Screen"})}),"\n",(0,s.jsx)(t.h2,{id:"introduction-to-chat-in-dyte-meetings",children:"Introduction to Chat in Dyte Meetings"}),"\n",(0,s.jsxs)(t.p,{children:["In Dyte meetings, participants can also engage in real-time communication by sending chat messages.\nThese messages can be text, images, or files, depending on the ",(0,s.jsx)(t.a,{href:"/guides/livestream/advanced/configuring-permissions#chat",children:"chat permissions"}),"\nset in their preset."]}),"\n",(0,s.jsx)(t.h2,{id:"dytes-prebuilt-chat-screen",children:"Dyte's Prebuilt Chat Screen"}),"\n",(0,s.jsx)(t.p,{children:"Dyte's iOS UiKit includes prebuilt Chat screen that handle the complete chat logic and offer\na range of features to enhance the chat experience in Dyte meetings:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Display Messages"}),": Displays all chat messages, including text, images, and files, in a clear and organized manner"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Image Preview"}),": Allows users to tap on an image message to view it in full screen"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"File Download"}),": Enables users to download files sent in chat messages with a simple tap"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Message Composer"}),": Provides a user-friendly interface for composing messages, supporting text,\nimage, and file messages. It automatically adjusts the UI based on the user's chat permissions,\nhiding or disabling options that are not permitted"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Auto-Scroll"}),": Auto-scrolls to new messages as they are received but stops auto-scrolling if the user\nhas scrolled up to read an old message"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Device Permissions"}),": Handles device permissions elegantly on all supported Android versions for sending images, files,\nand downloading files to the device. This saves developers effort, allowing them to focus on building their apps"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"topics",children:"Topics:"}),"\n",(0,s.jsx)(t.p,{children:"Creating a chat screen."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-swift",children:" let chatView = ChatViewController(dyteMobileClient: self.meeting)\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Add this ",(0,s.jsx)(t.code,{children:"chatView"})," to your View hierarchy. In case you need to add this to a ",(0,s.jsx)(t.code,{children:"ViewController"})," you can\nadd it inside a view of sub ",(0,s.jsx)(t.code,{children:"ViewController"}),", following example shows how to show chat screen on tap of button."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-swift",children:"private var splitContentViewController: UIViewController?\nprivate let splitContentBaseView = UIView()\n\nfunc chatClick(button: DyteControlBarButton) {\n    if button.isSelected {\n        let controller = ChatViewController(dyteMobileClient: self.meeting)\n        self.splitContentBaseView.addSubview(controller.view)\n        controller.view.set(.fillSuperView(self.splitContentBaseView))\n        self.splitContentViewController = controller\n    }\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,s.jsx)(t.p,{children:"meeting: Current ongoing meeting object."}),"\n",(0,s.jsx)(n,{children:(0,s.jsx)("title",{children:"iOS DyteChatViewController"})})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
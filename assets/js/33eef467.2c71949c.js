"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["7949"],{62176:function(e,t,i){i.r(t),i.d(t,{default:()=>p,frontMatter:()=>s,metadata:()=>a,assets:()=>r,toc:()=>c,contentTitle:()=>d});var a=JSON.parse('{"id":"helper-classes/dyte-plugin-view-model","title":"VideoPeerViewModel","description":"Learn how to use and customize the DytePluginViewController component in Dyte\'s iOS UiKit with our detailed documentation.","source":"@site/docs/ios/helper-classes/dyte-plugin-view-model.mdx","sourceDirName":"helper-classes","slug":"/helper-classes/dyte-plugin-view-model","permalink":"/ios/helper-classes/dyte-plugin-view-model","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"image":"/static/ui-kit/1.x.x/components/dyte-plugins.svg","description":"Learn how to use and customize the DytePluginViewController component in Dyte\'s iOS UiKit with our detailed documentation."},"sidebar":"tutorialSidebar","previous":{"title":"DyteStageActionButtonControlBar","permalink":"/ios/components/dyte-webinar-stage-toggle"},"next":{"title":"Release Notes","permalink":"/ios/release-notes"}}'),n=i("85893"),l=i("50065");let s={image:"/static/ui-kit/1.x.x/components/dyte-plugins.svg",description:"Learn how to use and customize the DytePluginViewController component in Dyte's iOS UiKit with our detailed documentation."},d="VideoPeerViewModel",r={},c=[{value:"Overview",id:"overview",level:2},{value:"Create instance of this class",id:"create-instance-of-this-class",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Update the participant",id:"update-the-participant",level:3},{value:"Call back when audio state gets updated",id:"call-back-when-audio-state-gets-updated",level:3},{value:"Call back when video state gets updated",id:"call-back-when-video-state-gets-updated",level:3},{value:"Call back when participants gets updated",id:"call-back-when-participants-gets-updated",level:3},{value:"Call back when name initials of participant gets updated",id:"call-back-when-name-initials-of-participant-gets-updated",level:3},{value:"Call back when name of participant gets updated",id:"call-back-when-name-of-participant-gets-updated",level:3}];function o(e){let t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{Head:i}=t;return!i&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"videopeerviewmodel",children:"VideoPeerViewModel"})}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:["A view model for instances of class ",(0,n.jsx)(t.a,{href:"/ios/components/dyte-participant-tile-view",children:"DyteParticipantTileView"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"create-instance-of-this-class",children:"Create instance of this class"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"init(meeting: DyteMobileClient, participant: DyteJoinedMeetingParticipant, showSelfPreviewVideo: Bool, showScreenShareVideoView: Bool = false)\n"})}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"meeting:"})," Current ongoing meeting.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"participant:"})," Participant for whom you want to load video.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"showSelfPreviewVideo"}),": This flags tell whether you want load video of self or not. ",(0,n.jsx)(t.code,{children:"true"})," load video of self",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"showScreenShareVideoView:"})," This flag will tell wheter to load screen share view'"]}),"\n",(0,n.jsx)(t.h3,{id:"update-the-participant",children:"Update the participant"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"func set(participant: DyteJoinedMeetingParticipant)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"call-back-when-audio-state-gets-updated",children:"Call back when audio state gets updated"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"var audioUpdate: (()->Void)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Whenever ",(0,n.jsx)(t.code,{children:"func onAudioUpdate(isEnabled: Bool)"})," protocol method  of ",(0,n.jsx)(t.code,{children:"DyteParticipantUpdateListener"})," get called,\nthis Call back is generated."]}),"\n",(0,n.jsx)(t.h3,{id:"call-back-when-video-state-gets-updated",children:"Call back when video state gets updated"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"var videoUpdate: (()->Void)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Whenever ",(0,n.jsx)(t.code,{children:"func onVideoUpdate(isEnabled: Bool)"})," protocol method  of ",(0,n.jsx)(t.code,{children:"DyteParticipantUpdateListener"})," get called,\nthis Call back is generated."]}),"\n",(0,n.jsx)(t.h3,{id:"call-back-when-participants-gets-updated",children:"Call back when participants gets updated"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"var loadNewParticipant: ((DyteJoinedMeetingParticipant)->Void)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Whenever ",(0,n.jsx)(t.code,{children:"func set(participant: DyteJoinedMeetingParticipant)"})," get called, Call back is generated"]}),"\n",(0,n.jsx)(t.h3,{id:"call-back-when-name-initials-of-participant-gets-updated",children:"Call back when name initials of participant gets updated"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"var nameInitialsUpdate: (()->Void)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Whenever ",(0,n.jsx)(t.code,{children:"func refreshInitialName"})," get called, Call back is generated"]}),"\n",(0,n.jsx)(t.h3,{id:"call-back-when-name-of-participant-gets-updated",children:"Call back when name of participant gets updated"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-swift",children:"var nameUpdate: (()->Void)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Whenever ",(0,n.jsx)(t.code,{children:"func refreshNameTag"})," get called, Call back is generated"]}),"\n",(0,n.jsx)(i,{children:(0,n.jsx)("title",{children:"iOS DytePluginViewController"})})]})}function p(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);
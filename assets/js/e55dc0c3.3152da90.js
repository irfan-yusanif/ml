"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["8806"],{63474:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>a,metadata:()=>s,assets:()=>l,toc:()=>r,contentTitle:()=>c});var s=JSON.parse('{"id":"chat/components-in-chat","title":"Chat Components","description":"Learn how to use and customize the CustomChatViewController component in Dyte\'s iOS UiKit with our detailed documentation.","source":"@site/docs/ios/chat/components-in-chat.mdx","sourceDirName":"chat","slug":"/chat/components-in-chat","permalink":"/ios/chat/components-in-chat","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"image":"/static/ui-kit/1.x.x/components/dyte-chat.svg","sidebar_position":2,"description":"Learn how to use and customize the CustomChatViewController component in Dyte\'s iOS UiKit with our detailed documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Pre-built Chat Screen","permalink":"/ios/chat/pre-built-chat-screen"},"next":{"title":"Attachments in Chat","permalink":"/ios/chat/attachments-in-chat"}}'),o=n("85893"),i=n("50065");let a={image:"/static/ui-kit/1.x.x/components/dyte-chat.svg",sidebar_position:2,description:"Learn how to use and customize the CustomChatViewController component in Dyte's iOS UiKit with our detailed documentation."},c="Chat Components",l={},r=[{value:"Overview",id:"overview",level:2},{value:"Topics:",id:"topics",level:3}];function d(e){let t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"chat-components",children:"Chat Components"})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"A custom chat view controller used to show chat screen with image & file upload."}),"\n",(0,o.jsx)(t.h3,{id:"topics",children:"Topics:"}),"\n",(0,o.jsxs)(t.p,{children:["Listen to chat message updates using ",(0,o.jsx)(t.code,{children:"meeting.addChatEventsListener(chatEventsListener: self)"})," & get callbacks:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"extension ChatViewController: DyteChatEventsListener {\n    public func onNewChatMessage(message: DyteChatMessage) {\n       //This can be used to show local notifications\n    }\n\n    public  func onChatUpdates(messages: [DyteChatMessage]) {\n        loadChatMessages()\n    }\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Creating a custom chat screen, you need following things:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"var messages: [DyteChatMessage]?\nlet messageTableView = UITableView()\nlet sendFileButton = DyteButton(style: .iconOnly(icon: DyteImage(image: sendFileImageIcon)), dyteButtonState: .focus)\nlet sendImageButton = DyteButton(style: .iconOnly(icon: DyteImage(image: sendImageIcon)), dyteButtonState: .active)\nlet sendMessageButton = DyteButton(style: .iconOnly(icon: DyteImage(image: sendMessageIcon)), dyteButtonState: .active)\nvar documentsViewController: DocumentsViewController?\nlet imagePicker = UIImagePickerController()\nlet messageTextView = UITextView()\n"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"CustomChatViewController"})," will have a tableView and at bottom buttons to select image/file and button to send message\nLoad messages & scroll to bottom to show latest message:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"private func loadChatMessages() {\n  self.messages = self.meeting.chat.messages\n  if messages.count > 0 {\n    messageTableView.reloadData(completion: {\n        DispatchQueue.main.async { [weak self] in\n            let indexPath = IndexPath(row: (self?.messages?.count ?? 1)-1, section: 0)\n            self?.messageTableView.scrollToRow(at: indexPath, at: .bottom, animated: true)\n        }\n    })\n  }\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Send text message, if it is correct and empty ",(0,o.jsx)(t.code,{children:"textView"})," once done:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:'@objc func sendButtonTapped() {\n  if !messageTextView.text.isEmpty {\n    let spacing = CharacterSet.whitespacesAndNewlines\n    let message = messageTextView.text.trimmingCharacters(in: spacing)\n    try?meeting.chat.sendTextMessage(message: message)\n    messageTextView.text = ""\n  }\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"Few helper functions:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"\npublic extension UITableView {\n\n    func reloadData(completion: @escaping () -> ()) {\n        UIView.animate(withDuration: 0, animations: {\n            self.reloadData()\n        }, completion: { _ in\n            completion()\n        })\n    }\n\n    func scrollToFirstCell() {\n        if numberOfSections > 0 {\n            if numberOfRows(inSection: 0) > 0 {\n                scrollToRow(at: IndexPath(row: 0, section: 0), at: .top, animated: true)\n            }\n        }\n    }\n\n    func scrollToLastCell(animated: Bool) {\n        if numberOfSections > 0 {\n            let nRows = numberOfRows(inSection: numberOfSections - 1)\n            if nRows > 0 {\n                scrollToRow(at: IndexPath(row: nRows - 1, section: numberOfSections - 1), at: .bottom, animated: animated)\n            }\n        }\n    }\n\n    func stopScrolling() {\n\n        guard isDragging else {\n            return\n        }\n\n        var offset = self.contentOffset\n        offset.y -= 1.0\n        setContentOffset(offset, animated: false)\n\n        offset.y += 1.0\n        setContentOffset(offset, animated: false)\n    }\n\n    func scrolledToBottom() -> Bool {\n        return contentOffset.y >= (contentSize.height - bounds.size.height)\n    }\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"DyteChatMessage"})," can be of type ",(0,o.jsx)(t.code,{children:"DyteTextMessage"}),", ",(0,o.jsx)(t.code,{children:"DyteFileMessage"})," or ",(0,o.jsx)(t.code,{children:"DyteImageMessage"}),"."]}),"\n",(0,o.jsx)(n,{children:(0,o.jsx)("title",{children:"iOS CustomChatViewController"})})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);